%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 21.0.2
%%For: (alex) ()
%%Title: (2l-laptops-01-01.eps)
%%CreationDate: 3/28/2017 8:46 AM
%%Canvassize: 16383
%%BoundingBox: 0 -931 1200 70
%%HiResBoundingBox: 0 -930.5 1200 69.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 0.749721 0.679194 0.670497 0.901457 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_Cropmarks: 0 -930.5 1200 69.5
%AI3_TemplateBox: 600.5 -431 600.5 -431
%AI3_TileBox: 187.5 -719.7 1012.5 -141.3
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1200 1000
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -361 78 1.26 2429 1266 18 0 0 82 125 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:200 -900
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 0
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 108 8
%%BeginData: 7256 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD6DFF
%5252275227522752275227522752275227522752275227522752275227FD
%62FF7D277DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7D5252FD61FFA827FF527D527D527D527D527D527D527D527D527D527D52
%7D527D52FF527DFD2AFF52FD1EF8277D527D52FF7D7DA8FD0FFF7D27FF27
%FD17FF7D7D7D52FD29FF7D27A8FD1CFF2752FD17FFA827FF27FD17FF52A8
%527DFD29FFF8A8FD1DFFA8F8FD17FF7D27FF27FFFF7D7D527D527D527D52
%7DA8FF7D7D527D527DA8FFFF7D7D7D52FD28FFA8F8FFFFF8522727275227
%2727522727275227272752272727522727275227FF7D27FD17FFA827FF27
%FFFFFF7DA8A8A87DA8A8A87DFFFF7D7DA8A8A852A8FFFF52A8527DFD28FF
%7D27FF7D7DFD19FF27FF7D27FD17FF7D27FF27FD0EFF52A8FFFFFF7D7DFF
%FF7D7D7D52FD28FF5252FF7DA8FD15FFA87D527D277D2727527DFFA852FD
%12FFA827FF27FFFFA8527D527D527D527D52FFFF7D7DA8A8A852A8FFFF52
%A8527DFD28FF5252FF52A8FD18FF7D7DFF5252FD17FF7D27FF27FFFFA8A8
%7DA87DA87DA87DA8A8FFA8A87DA87DA8A8FFFF7D7D7D52FD28FF27A8FF52
%FD19FF7D7DFF27A8FD17FFA827FF27FD17FF52A8527DFD28FFF87DFFF8FD
%0627A85227A8FD0FFF27FFFFF8A8FD17FF7D27FF27FFFFA8A87DA87DA87D
%A87DA87DA87DA87DA87DA8A8FFFF7D7D7D52FD28FFF8FFFF52FD19FF52FF
%FFF8FD18FFA827FF27FFFFFFFD11A8FFFFFF52A8527DFD27FF7D27FFA852
%FD19FF27FF7D27527D527D527D527DA87D7DFD0DFF7D27FF27FD17FF7D7D
%7D52FD27FF7D27FFA87DFD19FF52FF7D27FD18FFA827FF27FFFFFF7DA8A8
%A87DA8A8A87DFD04A8FD07FF52A8527DFD27FF52F8FD0527FF2752FD13FF
%A852FF527DFD18FF7D27FF27FFFFA8A87DA87DA87DA87DA87DA87DFD08FF
%7D7D7D52FD27FF5252FF52FD19FF7DA8FF527DFD18FFA827FF27FD17FF52
%A8527DFD27FF27A8FF27FD19FF7D52A8F87D7DA8FFA87DFD13FF7D27FF27
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D527D7D52FD27FF
%F8A8FF27FD19FF277D52F8527D7DFF7D7DA8FD12FFA827FFA8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8FF527DFD26FFA8F8FFFF52
%FD19FF52FFA8F8FD19FF7D27527D527D527D527D527D527D527D527D527D
%527D527D527D527D522752FD26FFA827FFA852FD19FF27FFA852FD19FF52
%277D527D527D527D527D527D527D527D527D527D527D527D527D527D5227
%FD26FF7D27FF7D7DFD18FFA852FF7D27FD18FFA8F87D272727F8FD0627F8
%27F827F827F827F827F82727F827F827272752FD22FF7D527D2727525252
%7D527D527D527D527D527D527D527D527D527D527D527D5252277D272752
%7D527D527DFF7D52FD0FFFF87DFD1DF87DF8A8FD20FF52277D527D527D52
%7D527D527D5252F8527DA87DA87DA87D7D2727527D527D527D527D527D52
%7D52F87DFD13FF27275227F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827277DF8FD20FFA827FD0EFF5227FD06F8277DFD0DFF
%5227FD13FFA8F8A8FFFD0AA8F8FD07A827FD0AA8FFFF2752FD20FF27F852
%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52
%7D527D52F827FD13FFA82752FD0CFFFD09277DFD0BFFA8F8A8FD20FF7D7D
%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D
%527D527D7DFD14FF7DF87D527D527D527D527D527D527D527D527D527D52
%7D527D527D527D527D527D527D527D2752FD59FF5227A8FD22FF5227FD59
%FFA8F8272752275227522752275227522752275227522752275227522752
%2752275227522727F87DFD5AFFA8527D527D527D527D527D527D527D527D
%527D527D527D527D527D527D527D527D527D52A8FDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDC0FFA827FD1CF852FD61FFA827FD1CFFF8FD
%61FF7D27FF7D527D527D527D527D527D527D527D527D527D527D527D527D
%7DFFF8FD1AFF7DFD1D2752A8FD27FFA827FF27FD17A87D7DFFF8FD19FF7D
%F8FD1DA82727FD27FF7D27FF27FD17FFA852FFF8FD19FFF87DA8A87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FFF8A8FD26FF
%A827FF27FD04FFA852FF7DFD0FFF7D7DFFF8FD19FFF8FFA8527D527D527D
%527D527D527D527D527D527D527D527D527D527D5227FF52A8FD26FF7D27
%FF27FFFFFFA827FF7D27A8FD0EFFA852FFF8FD19FFF8FF7DA8FFFFA8A87D
%A87DA87DA87DFD0FFF27FF27A8FD26FFA827FF27FFFFA827FF7D27FD10FF
%A87DFFF8FD19FFF8FFA8A8FFFF27275227522752272752FD0EFF52FF52A8
%FD26FF7D27FF27FFFF7DFF7D27A8FD10FFA852FFF8FD19FFF8FF7DA8FFA8
%27FD05FFA87DA8F8FD0EFF27FF27A8FD26FFA827FF27FFFFFF7D27A8FD11
%FFA87DFFF8FD19FFF8FFA8A8FF7D27527D527D527D527DF8FD0EFF52FF27
%7DFD26FF7D27FF27FFFF7D27A8FD12FFA852FFF8FD19FFF8FF7DA8FFA827
%FD08FFFD09F827FD05FF27FF27A8FD26FFA827FF27FF7D27FD14FFA87DFF
%F8FD19FFF8FFA8A8FFA852FF52275227527DFFF8FD06A85252277DFD04FF
%52FF52A8FD26FF7D27FF27FFA8A8FD14FFA852FFF8FD19FFF8FF7DA8FFA8
%27FF7DA87DA8FFFFFFF8527D527D527D527DF87DFD04FF27FF27A8FD26FF
%A827FF27FD17FF7D7DFFF8FD19FFF8FFA87DFFA827FD05A8FFFFFFF8FD08
%FF5252FD04FF27FF52A8FD26FF7D27FF27FD17FFA852FFF8FD19FFF8FF7D
%A8FFFFF87D527D527D527D52F8527D527D7DFFFFFF277DFD04FF27FF27A8
%FD26FFA827FF27FD17FFA87DFFF8FD19FFF8FFA8A8FFFFA8527D527DF87D
%527D7DFD08FF5252FD04FF52FF52A8FD26FF7D27FF27FD17FFA852FFF8FD
%19FFF8FF7DA8FD07FFF8FF7DFD08277DFF277DFD04FF27FF27A8FD26FFA8
%27FF27A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87D7DFFF8
%FD19FFF8FFA8A8FD07FFF8FFFD04A87DA8A8FD04FF2752FD04FF52FF277D
%FD26FF7D27FF7D527D527D527D527D527D527D527D527D527D527D527D52
%7D7DFFF8FD19FFF8FF7DA8FD07FFF8FFA8527D527D527D7DFFFFFF277DFD
%04FF27FF27A8FD26FFA827FD1CFFF8FD19FFF8FFA8A8FD07FF2752527D52
%7D527D527D527D52277DFD04FF52FF52A8FD26FF7DF8FD1C27F8A8FD18FF
%F8FF7DA8FD08FF527D527D527D527D527D527D7DFD05FF27FF27A8FD25FF
%7DF8A8FD1CFF7DF8FD15FFA8A87DF8A87D7DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8277D277DA87DFD22FFA8F87DFD1EFF52
%F8FD13FF52FD2727F8FD21FF2752FD0BFFFD0AA8FD0BFF2727FD12FF7D27
%FD25FF7D27FD20FF2727FD0BFFA87D527D527D527D527D52FD0BFFA82752
%FD11FFA8277DFD0EFFA8527D527D527DFD0EFFA8F87DFD1FFFA8F8FD0427
%522727275227272752272727522727275227272752272727522727275227
%27F8F8FD12FF7D27277D527D527D527D527D527D527D527D527D527D527D
%527D527D527D527D527D527D522752FD20FF7D27FFFFFF27FF7DFD16FF7D
%7DFD06FFF8A8FD12FFA87D527D527D527D527D527D527D527D527D527D52
%7D527D527D527D527D527D527D527D7DFD21FFA8F852A8A827A852FD16A8
%7D52FD05A82727FD5AFF7DFD24277DFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFDFCFFFD6EFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Line artwork) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Sketch artwork) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(AstuteSFPUG) (Space Fill) (ColliderScribe.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(AstuteWPPUG) (Width Stamp) (WidthScribe.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ Touch Calligraphic Brush/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 0 24 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(Black)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(R=0 G=0 B=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
*u
0 O
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
0 J 0 j 1 w 10 M []0 d0 XR
367.3821 -727.8237 m
367.3821 -728.8866 366.5207 -729.7467 365.4586 -729.7467 C
269.9194 -729.7467 L
268.8572 -729.7467 267.9958 -728.8866 267.9958 -727.8237 c
267.9958 -726.7609 268.8572 -725.9008 269.9194 -725.9008 C
365.4586 -725.9008 L
366.5207 -725.9008 367.3821 -726.7609 367.3821 -727.8237 c
f
u
200.3668 -526.7776 m
434.8064 -526.7776 L
434.8064 -674.885 L
200.3668 -674.885 L
200.3668 -526.7776 L
f
1 D
204.214 -671.0379 m
430.9592 -671.0379 L
430.9592 -530.6247 L
204.214 -530.6247 L
204.214 -671.0379 L
f
U
280.0097 -554.7063 m
220.9644 -613.7531 L
220.2136 -614.5038 220.2136 -615.7217 220.965 -616.4731 c
221.3401 -616.8482 221.8324 -617.0363 222.3247 -617.0363 c
222.817 -617.0363 223.3094 -616.8482 223.6851 -616.4725 C
282.7305 -557.4257 L
283.4812 -556.675 283.4812 -555.4571 282.7298 -554.7057 c
281.9797 -553.9556 280.7612 -553.9549 280.0097 -554.7063 C
f
231.3059 -580.4067 m
231.7982 -580.4067 232.2905 -580.2185 232.6662 -579.8428 C
259.0564 -553.4533 L
259.8078 -552.7019 259.8078 -551.484 259.057 -550.7333 c
258.3056 -549.9819 257.0871 -549.9825 256.337 -550.7326 C
229.9455 -577.1234 L
229.1948 -577.8742 229.1948 -579.0921 229.9462 -579.8435 c
230.3212 -580.2185 230.8135 -580.4067 231.3059 -580.4067 c
f
u
0 D
496.9044 -745.358 m
496.9044 -753.0828 L
496.9044 -763.0923 488.7615 -771.2359 478.752 -771.2359 C
156.626 -771.2359 L
146.6164 -771.2359 138.4735 -763.0923 138.4735 -753.0828 C
138.4735 -745.358 L
138.4735 -742.6571 139.215 -740.0106 140.6184 -737.7047 C
140.9258 -737.27 L
177.4077 -692.6254 L
177.4077 -510.9993 L
177.4077 -507.0395 180.6287 -503.8185 184.5885 -503.8185 C
450.5847 -503.8185 L
454.5445 -503.8185 457.7655 -507.0395 457.7655 -510.9993 C
457.7655 -692.6187 L
494.6184 -737.4728 L
494.7595 -737.7047 L
496.163 -740.0106 496.9044 -742.6571 496.9044 -745.358 C
f
1 D
185.1007 -692.0741 m
450.0725 -692.0741 L
450.0725 -511.5115 L
185.1007 -511.5115 L
185.1007 -692.0741 L
f
148.3145 -740.387 m
487.0553 -740.387 L
450.52 -695.9199 L
184.6502 -695.9199 L
148.3145 -740.387 L
f
179.3306 -744.2328 m
146.268 -744.2328 L
146.2078 -744.6041 146.1665 -744.9788 146.1665 -745.358 C
146.1665 -753.0828 L
146.1665 -758.8502 150.8585 -763.5416 156.626 -763.5416 C
179.3306 -763.5416 L
179.3306 -744.2328 L
f
197.6527 -744.2328 m
183.1778 -744.2328 L
183.1778 -763.5416 L
197.6527 -763.5416 L
197.6527 -744.2328 L
f
421.8614 -744.2328 m
201.4999 -744.2328 L
201.4999 -763.5416 L
421.8614 -763.5416 L
421.8614 -744.2328 L
f
489.2114 -745.358 m
489.2114 -744.9788 489.1701 -744.6041 489.1098 -744.2328 C
425.7086 -744.2328 L
425.7086 -763.5416 L
478.752 -763.5416 L
484.5194 -763.5416 489.2114 -758.8502 489.2114 -753.0828 C
489.2114 -745.358 L
f
U
*U
*u
u
1037.2088 -709.9953 m
1035.9047 -708.5653 1034.0481 -707.745 1032.1159 -707.745 C
1004.9869 -707.745 L
1004.9869 -550.1952 L
1004.9869 -535.8601 993.3235 -524.198 978.9883 -524.198 C
721.3008 -524.1967 L
706.9657 -524.1967 695.3022 -535.8588 695.3022 -550.1939 C
695.3009 -707.745 L
668.1785 -707.745 L
666.245 -707.745 664.3884 -708.5653 663.0843 -709.9966 c
661.7882 -711.4173 661.1455 -713.3283 661.3218 -715.2366 c
663.1917 -735.4942 679.9613 -750.7716 700.3302 -750.7716 C
999.9629 -750.7716 L
1020.3318 -750.7716 1037.1014 -735.4942 1038.9713 -715.2366 c
1039.1476 -713.3269 1038.5049 -711.4173 1037.2088 -709.9953 c
f
0 D
702.9966 -550.1939 m
702.9966 -540.1009 711.2078 -531.8897 721.3008 -531.8897 C
978.9883 -531.891 L
989.0814 -531.891 997.2926 -540.1022 997.2926 -550.1952 C
997.2926 -707.745 L
979.9942 -707.745 L
979.9942 -549.19 L
720.2963 -549.19 L
720.2963 -707.745 L
702.9952 -707.745 L
702.9966 -550.1939 L
f
976.1484 -553.0372 m
976.1484 -707.745 L
724.1421 -707.745 L
724.1421 -553.0372 L
976.1484 -553.0372 L
f
999.9629 -743.0772 m
700.3302 -743.0772 L
684.2683 -743.0772 670.9907 -731.2588 669.0797 -715.4394 C
1031.2134 -715.4394 L
1029.3024 -731.2588 1016.0248 -743.0772 999.9629 -743.0772 C
f
U
820.6871 -729.5982 m
820.6871 -728.5354 821.5472 -727.6753 822.6101 -727.6753 C
877.6817 -727.6753 L
878.7446 -727.6753 879.6046 -728.5354 879.6046 -729.5982 c
879.6046 -730.6611 878.7446 -731.5211 877.6817 -731.5211 C
822.6101 -731.5211 L
821.5472 -731.5211 820.6871 -730.6611 820.6871 -729.5982 c
f
914.424 -612.7426 m
914.424 -613.8047 913.5639 -614.6661 912.5011 -614.6661 C
902.4438 -614.6661 L
901.381 -614.6661 900.5209 -613.8047 900.5209 -612.7426 c
900.5209 -611.6804 901.381 -610.819 902.4438 -610.819 C
912.5011 -610.819 L
913.5639 -610.819 914.424 -611.6804 914.424 -612.7426 c
f
822.3039 -654.1636 m
903.6114 -654.1636 L
904.6742 -654.1636 905.5343 -655.025 905.5343 -656.0872 c
905.5343 -657.1494 904.6742 -658.0108 903.6114 -658.0108 C
822.3039 -658.0108 L
821.2411 -658.0108 820.381 -657.1494 820.381 -656.0872 c
820.381 -655.025 821.2411 -654.1636 822.3039 -654.1636 C
f
886.3249 -671.6197 m
886.3249 -672.6818 885.4649 -673.5432 884.402 -673.5432 C
822.3039 -673.5432 L
821.2411 -673.5432 820.381 -672.6818 820.381 -671.6197 c
820.381 -670.5575 821.2411 -669.6961 822.3039 -669.6961 C
884.402 -669.6961 L
885.4649 -669.6961 886.3249 -670.5575 886.3249 -671.6197 c
f
827.3107 -581.9168 m
827.3107 -582.979 826.4506 -583.8404 825.3878 -583.8404 C
815.3292 -583.8404 L
814.2663 -583.8404 813.4063 -582.979 813.4063 -581.9168 c
813.4063 -580.8546 814.2663 -579.9932 815.3292 -579.9932 C
825.3878 -579.9932 L
826.4506 -579.9932 827.3107 -580.8546 827.3107 -581.9168 c
f
768.2341 -609.3016 m
768.2341 -608.2394 769.0942 -607.378 770.1571 -607.378 C
818.853 -607.378 L
819.9158 -607.378 820.7759 -608.2394 820.7759 -609.3016 c
820.7759 -610.3638 819.9158 -611.2252 818.853 -611.2252 C
770.1571 -611.2252 L
769.0942 -611.2252 768.2341 -610.3638 768.2341 -609.3016 c
f
768.2341 -623.972 m
768.2341 -622.9098 769.0942 -622.0484 770.1571 -622.0484 C
801.8767 -622.0484 L
802.9395 -622.0484 803.7996 -622.9098 803.7996 -623.972 c
803.7996 -625.0342 802.9395 -625.8956 801.8767 -625.8956 C
770.1571 -625.8956 L
769.0942 -625.8956 768.2341 -625.0342 768.2341 -623.972 c
f
u
1 D
759.477 -647.5361 m
798.5132 -647.5361 L
798.5132 -682.5522 L
798.5132 -688.3674 803.2457 -693.0998 809.0621 -693.0998 C
920.2948 -693.0998 L
926.11 -693.0998 930.8424 -688.3674 930.8424 -682.5522 C
930.8424 -608.4137 L
930.8424 -602.5979 926.11 -597.8667 920.2948 -597.8667 C
843.7331 -597.8667 L
843.7331 -577.5926 L
843.7331 -571.7768 839.0006 -567.045 833.1841 -567.045 C
759.477 -567.045 L
753.6605 -567.045 748.9281 -571.7768 748.9281 -577.5926 C
748.9281 -636.9885 L
748.9281 -642.8043 753.6605 -647.5361 759.477 -647.5361 C
f
0 D
843.7331 -605.5598 m
920.2948 -605.5598 L
921.8679 -605.5598 923.148 -606.8399 923.148 -608.4137 C
923.148 -620.2004 L
843.7331 -620.2004 L
843.7331 -605.5598 L
f
842.1742 -642.4783 m
884.402 -642.4783 L
885.4649 -642.4783 886.3249 -641.6169 886.3249 -640.5547 c
886.3249 -639.4925 885.4649 -638.6311 884.402 -638.6311 C
843.5919 -638.6311 L
843.6764 -638.0944 843.7331 -637.5486 843.7331 -636.9885 C
843.7331 -624.0475 L
923.148 -624.0475 L
923.148 -682.5522 L
923.148 -684.1253 921.8679 -685.4055 920.2948 -685.4055 C
809.0621 -685.4055 L
807.4877 -685.4055 806.2076 -684.1253 806.2076 -682.5522 C
806.2076 -647.5361 L
833.1841 -647.5361 L
836.988 -647.5361 840.3182 -645.5055 842.1742 -642.4783 C
f
756.6224 -577.5926 m
756.6224 -576.0188 757.9026 -574.738 759.477 -574.738 C
833.1841 -574.738 L
834.7585 -574.738 836.0387 -576.0188 836.0387 -577.5926 C
836.0387 -589.3753 L
756.6224 -589.3753 L
756.6224 -577.5926 L
f
756.6224 -593.2224 m
836.0387 -593.2224 L
836.0387 -636.9885 L
836.0387 -638.5622 834.7585 -639.8431 833.1841 -639.8431 C
759.477 -639.8431 L
757.9026 -639.8431 756.6224 -638.5622 756.6224 -636.9885 C
756.6224 -593.2224 L
f
U
*U
*u
u
1 D
1037.3479 -330.289 m
1036.9967 -329.0472 1036.464 -327.8273 1035.7073 -326.567 C
997.2886 -266.4913 L
997.2886 -91.0686 L
997.2886 -87.0412 994.006 -83.7646 989.9706 -83.7646 C
728.2238 -83.7646 L
724.1885 -83.7646 720.9059 -87.0412 720.9059 -91.0686 C
720.9059 -266.8209 L
682.6422 -326.6591 L
681.9425 -327.8227 681.4097 -329.0439 681.0745 -330.2287 c
680.6583 -331.6109 680.4476 -333.0521 680.4476 -334.5118 C
680.4476 -336.1571 L
680.4476 -346.4761 688.843 -354.8708 699.1627 -354.8708 C
1019.2425 -354.8708 L
1029.5621 -354.8708 1037.9575 -346.4761 1037.9575 -336.1571 C
1037.9575 -334.5118 L
1037.9575 -333.0461 1037.7455 -331.6036 1037.3479 -330.289 c
f
0 D
728.6002 -91.4576 m
989.5942 -91.4576 L
989.5942 -264.0979 L
728.6002 -264.0979 L
728.6002 -91.4576 L
f
726.8589 -271.7909 m
991.5463 -271.7909 L
1028.3977 -329.413 L
690.0105 -329.413 L
726.8589 -271.7909 L
f
1030.2632 -336.1571 m
1030.2632 -342.234 1025.32 -347.1778 1019.2425 -347.1778 C
699.1627 -347.1778 L
693.0851 -347.1778 688.142 -342.234 688.142 -336.1571 C
688.142 -334.5118 L
688.142 -334.0935 688.1895 -333.6779 688.2631 -333.2601 C
1030.1436 -333.2601 L
1030.2153 -333.6697 1030.2632 -334.0859 1030.2632 -334.5118 C
1030.2632 -336.1571 L
f
U
u
1 D
999.7363 -299.5898 m
987.894 -279.4832 L
986.8642 -277.7406 985.2156 -277.7406 983.8917 -277.7406 C
952.0101 -277.7406 L
952.0045 -277.7406 951.9988 -277.7406 951.9931 -277.7406 C
766.4199 -277.7411 L
766.4068 -277.741 766.3941 -277.7411 766.381 -277.7411 C
733.8203 -277.7412 L
732.4142 -277.7412 731.097 -278.494 730.3827 -279.7059 C
718.6662 -299.5904 L
717.9426 -300.8209 717.9333 -302.3562 718.641 -303.5927 c
719.3474 -304.8324 720.6753 -305.6031 722.1052 -305.6031 C
821.4999 -305.6031 L
815.9375 -316.307 L
815.4697 -317.2075 815.5054 -318.3061 816.0316 -319.1735 c
816.5577 -320.0442 817.5172 -320.5849 818.5349 -320.5849 C
899.8702 -320.5849 L
900.888 -320.5849 901.8475 -320.0442 902.3723 -319.1755 c
902.8997 -318.3061 902.9355 -317.2075 902.4677 -316.3083 C
896.9061 -305.6031 L
996.2973 -305.6031 L
997.7219 -305.6031 999.0485 -304.8344 999.7615 -303.5933 c
1000.4692 -302.3536 1000.4599 -300.8196 999.7363 -299.5898 C
f
0 D
983.8917 -281.5877 m
984.292 -281.5877 984.5345 -281.5977 984.6816 -281.6103 C
987.1176 -285.7463 L
974.1564 -285.7463 L
972.0334 -281.5877 L
983.8917 -281.5877 L
f
967.7133 -281.5878 m
969.8362 -285.7463 L
956.7381 -285.7463 L
954.9415 -281.5878 L
967.7133 -281.5878 L
f
950.7521 -281.5878 m
952.5487 -285.7463 L
939.3296 -285.7463 L
937.8596 -281.5878 L
950.7521 -281.5878 L
f
933.7808 -281.5879 m
935.2508 -285.7463 L
921.9307 -285.7463 L
920.7875 -281.5879 L
933.7808 -281.5879 L
f
902.1975 -293.7508 m
888.1119 -293.7508 L
887.622 -289.5935 L
901.3812 -289.5935 L
902.1975 -293.7508 L
f
899.8094 -281.588 m
900.6259 -285.7463 L
887.1688 -285.7463 L
886.6789 -281.588 L
899.8094 -281.588 L
f
885.1825 -301.7559 m
870.4329 -301.7559 L
870.2696 -297.5979 L
884.6927 -297.5979 L
885.1825 -301.7559 L
f
884.2394 -293.7508 m
870.1184 -293.7508 L
869.9551 -289.5935 L
883.7496 -289.5935 L
884.2394 -293.7508 L
f
882.8064 -281.588 m
883.2963 -285.7463 L
869.8039 -285.7463 L
869.6405 -281.5881 L
882.8064 -281.588 L
f
852.6125 -281.5881 m
865.7914 -281.5881 L
865.9548 -285.7463 L
852.4494 -285.7463 L
852.6125 -281.5881 L
f
852.2984 -289.5935 m
866.1059 -289.5935 L
866.2693 -293.7508 L
852.1353 -293.7508 L
852.2984 -289.5935 L
f
851.9844 -297.5979 m
866.4204 -297.5979 L
866.5838 -301.7559 L
851.8212 -301.7559 L
851.9844 -297.5979 L
f
835.5987 -281.5881 m
848.7634 -281.5881 L
848.6002 -285.7463 L
835.1088 -285.7463 L
835.5987 -281.5881 L
f
834.6556 -289.5935 m
848.4493 -289.5935 L
848.2862 -293.7508 L
834.1657 -293.7508 L
834.6556 -289.5935 L
f
833.7125 -297.5979 m
848.1353 -297.5979 L
847.9721 -301.7559 L
833.2227 -301.7559 L
833.7125 -297.5979 L
f
818.5957 -281.5881 m
831.7263 -281.5881 L
831.2364 -285.7463 L
817.7792 -285.7463 L
818.5957 -281.5881 L
f
817.0239 -289.5935 m
830.7831 -289.5935 L
830.2933 -293.7508 L
816.2077 -293.7508 L
817.0239 -289.5935 L
f
784.6243 -281.5882 m
797.6164 -281.5882 L
796.4734 -285.7463 L
783.1544 -285.7463 L
784.6243 -281.5882 L
f
767.6515 -281.5883 m
780.5454 -281.5883 L
779.0755 -285.7463 L
765.8554 -285.7463 L
767.6515 -281.5883 L
f
750.6915 -281.5883 m
763.4622 -281.5883 L
761.6661 -285.7463 L
748.5686 -285.7463 L
750.6915 -281.5883 L
f
733.6957 -281.6586 m
733.7209 -281.6162 733.7713 -281.5884 733.8203 -281.5884 C
746.3713 -281.5884 L
744.2485 -285.7463 L
731.2873 -285.7463 L
733.6957 -281.6586 L
f
736.0747 -301.7559 m
722.1052 -301.7559 L
722.0535 -301.7559 722.0071 -301.73 721.9806 -301.685 c
721.9555 -301.6399 721.9555 -301.5849 721.9806 -301.5419 C
724.3044 -297.5979 L
738.1975 -297.5979 L
736.0747 -301.7559 L
f
726.5711 -293.7508 m
729.0206 -289.5935 L
742.2842 -289.5935 L
740.1618 -293.7508 L
726.5711 -293.7508 L
f
754.7504 -301.7559 m
740.3949 -301.7559 L
742.5177 -297.5979 L
756.5465 -297.5979 L
754.7504 -301.7559 L
f
744.482 -293.7508 m
746.6044 -289.5935 L
760.0042 -289.5935 L
758.2084 -293.7508 L
744.482 -293.7508 L
f
773.4161 -301.7559 m
758.9397 -301.7559 L
760.7359 -297.5979 L
774.8859 -297.5979 L
773.4161 -301.7559 L
f
762.3977 -293.7508 m
764.1936 -289.5935 L
777.7155 -289.5935 L
776.2459 -293.7508 L
762.3977 -293.7508 L
f
792.073 -301.7559 m
777.4949 -301.7559 L
778.9648 -297.5979 L
793.2158 -297.5979 L
792.073 -301.7559 L
f
794.2733 -293.7508 m
780.3248 -293.7508 L
781.7944 -289.5935 L
795.416 -289.5935 L
794.2733 -293.7508 L
f
810.7162 -301.7559 m
796.061 -301.7559 L
797.204 -297.5979 L
811.5325 -297.5979 L
810.7162 -301.7559 L
f
812.2879 -293.7508 m
798.2614 -293.7508 L
799.4041 -289.5935 L
813.1042 -289.5935 L
812.2879 -293.7508 L
f
800.4616 -285.7463 m
801.6045 -281.5882 L
814.6759 -281.5881 L
813.8595 -285.7463 L
800.4616 -285.7463 L
f
814.6359 -301.7559 m
815.4523 -297.5979 L
829.8401 -297.5979 L
829.3502 -301.7559 L
814.6359 -301.7559 L
f
898.3555 -316.7377 m
820.0497 -316.7377 L
825.8353 -305.6031 L
892.5711 -305.6031 L
898.3555 -316.7377 L
f
889.0549 -301.7559 m
888.5651 -297.5979 L
902.9529 -297.5979 L
903.7692 -301.7559 L
889.0549 -301.7559 L
f
903.7291 -281.588 m
916.7993 -281.5879 L
917.9426 -285.7463 L
904.5457 -285.7463 L
903.7291 -281.588 L
f
905.301 -289.5935 m
919.0002 -289.5935 L
920.1431 -293.7508 L
906.1172 -293.7508 L
905.301 -289.5935 L
f
907.689 -301.7559 m
906.8726 -297.5979 L
921.2009 -297.5979 L
922.344 -301.7559 L
907.689 -301.7559 L
f
922.9884 -289.5935 m
936.6107 -289.5935 L
938.0803 -293.7508 L
924.1314 -293.7508 L
922.9884 -289.5935 L
f
926.3322 -301.7559 m
925.189 -297.5979 L
939.4404 -297.5979 L
940.9102 -301.7559 L
926.3322 -301.7559 L
f
940.6897 -289.5935 m
954.2107 -289.5935 L
956.0069 -293.7508 L
942.1593 -293.7508 L
940.6897 -289.5935 L
f
944.9891 -301.7559 m
943.5192 -297.5979 L
957.669 -297.5979 L
959.4652 -301.7559 L
944.9891 -301.7559 L
f
958.4002 -289.5935 m
971.8002 -289.5935 L
973.9225 -293.7508 L
960.1963 -293.7508 L
958.4002 -289.5935 L
f
963.6547 -301.7559 m
961.8584 -297.5979 L
975.8865 -297.5979 L
978.0091 -301.7559 L
963.6547 -301.7559 L
f
976.1203 -289.5935 m
989.3835 -289.5935 L
991.8322 -293.7508 L
978.2426 -293.7508 L
976.1203 -289.5935 L
f
996.2973 -301.7559 m
982.3292 -301.7559 L
980.2066 -297.5979 L
994.0981 -297.5979 L
996.4205 -301.5412 L
996.447 -301.5856 996.447 -301.6406 996.4245 -301.681 c
996.3967 -301.7281 996.349 -301.7559 996.2973 -301.7559 C
f
U
u
1 D
741.8712 -250.8402 m
976.3233 -250.8402 L
976.3233 -104.7146 L
741.8712 -104.7146 L
741.8712 -250.8402 L
f
0 D
745.717 -108.5618 m
972.4774 -108.5618 L
972.4774 -246.993 L
745.717 -246.993 L
745.717 -108.5618 L
f
U
u
1 D
938.3896 -133.795 m
887.9735 -133.795 L
887.9735 -167.1486 L
938.3896 -167.1486 L
938.3896 -133.795 L
f
0 D
934.5438 -163.3015 m
891.8194 -163.3015 L
891.8194 -137.6422 L
934.5438 -137.6422 L
934.5438 -163.3015 L
f
U
774.2176 -135.7186 m
774.2176 -134.6564 775.0777 -133.795 776.1405 -133.795 C
862.5236 -133.795 L
863.5865 -133.795 864.4465 -134.6564 864.4465 -135.7186 c
864.4465 -136.7808 863.5865 -137.6422 862.5236 -137.6422 C
776.1405 -137.6422 L
775.0777 -137.6422 774.2176 -136.7808 774.2176 -135.7186 c
f
774.2176 -164.1589 m
774.2176 -163.0967 775.0777 -162.2353 776.1405 -162.2353 C
862.5236 -162.2353 L
863.5865 -162.2353 864.4465 -163.0967 864.4465 -164.1589 c
864.4465 -165.2211 863.5865 -166.0825 862.5236 -166.0825 C
776.1405 -166.0825 L
775.0777 -166.0825 774.2176 -165.2211 774.2176 -164.1589 c
f
941.2349 -192.5979 m
941.2349 -193.6601 940.3748 -194.5215 939.312 -194.5215 C
776.1405 -194.5215 L
775.0777 -194.5215 774.2176 -193.6601 774.2176 -192.5979 c
774.2176 -191.5357 775.0777 -190.6743 776.1405 -190.6743 C
939.312 -190.6743 L
940.3748 -190.6743 941.2349 -191.5357 941.2349 -192.5979 c
f
892.8849 -221.0362 m
892.8849 -222.0984 892.0248 -222.9598 890.9619 -222.9598 C
776.1405 -222.9598 L
775.0777 -222.9598 774.2176 -222.0984 774.2176 -221.0362 c
774.2176 -219.974 775.0777 -219.1126 776.1405 -219.1126 C
890.9619 -219.1126 L
892.0248 -219.1126 892.8849 -219.974 892.8849 -221.0362 c
f
*U
*u
535.6154 -249.9231 m
535.6154 -250.9853 534.7539 -251.8467 533.6918 -251.8467 C
521.1331 -251.8467 L
520.071 -251.8467 519.2096 -250.9853 519.2096 -249.9231 c
519.2096 -248.8609 520.071 -247.9995 521.1331 -247.9995 C
533.6918 -247.9995 L
534.7539 -247.9995 535.6154 -248.8609 535.6154 -249.9231 c
f
u
534.4193 -293.6918 m
534.4193 -294.754 533.5579 -295.6154 532.4957 -295.6154 C
507.9095 -295.6154 L
508.3693 -296.8064 508.4677 -298.1304 508.1531 -299.4374 c
503.5134 -318.7143 482.1804 -328.8001 463.5058 -328.8001 C
163.4211 -328.8001 L
151.4111 -328.8001 140.2467 -324.5904 133.5562 -317.5388 c
128.5958 -312.3114 126.1753 -305.7177 126.5563 -298.4719 c
126.757 -294.6307 129.9164 -291.6211 133.749 -291.6211 C
164.8144 -291.6211 L
188.2124 -134.7459 L
190.289 -120.8249 203.3221 -109.5 217.2663 -109.5 C
470.1548 -109.5 L
470.2681 -109.4793 470.3837 -109.4649 470.503 -109.4649 C
532.4957 -109.4649 L
533.5579 -109.4649 534.4193 -110.3263 534.4193 -111.3885 c
534.4193 -112.4507 533.5579 -113.3121 532.4957 -113.3121 C
485.8519 -113.3121 L
487.4795 -114.3956 488.9792 -115.6732 490.2822 -117.1858 c
494.6071 -122.2058 496.4088 -128.8452 495.3559 -135.8823 C
492.0567 -157.9429 L
512.9822 -157.9429 L
514.0444 -157.9429 514.9058 -158.8043 514.9058 -159.8664 c
514.9058 -160.9286 514.0444 -161.79 512.9822 -161.79 C
491.4813 -161.79 L
485.404 -202.4272 L
556.629 -202.4272 L
557.6912 -202.4272 558.5526 -203.2886 558.5526 -204.3508 c
558.5526 -205.4129 557.6912 -206.2744 556.629 -206.2744 C
484.8286 -206.2744 L
478.5886 -247.9995 L
503.3564 -247.9995 L
504.4186 -247.9995 505.28 -248.8609 505.28 -249.9231 c
505.28 -250.9853 504.4186 -251.8467 503.3564 -251.8467 C
478.0131 -251.8467 L
472.0648 -291.6211 L
501.9861 -291.6211 L
502.4574 -291.6211 502.9185 -291.6736 503.3655 -291.7682 C
532.4957 -291.7682 L
533.5579 -291.7682 534.4193 -292.6296 534.4193 -293.6918 c
f
1 D
483.7027 -161.79 m
462.8515 -161.79 L
449.9616 -247.9995 L
470.8091 -247.9995 L
483.7027 -161.79 L
f
374.6073 -291.7682 m
375.271 -291.68 375.9395 -291.6211 376.6138 -291.6211 C
439.5496 -291.6211 L
458.9619 -161.79 L
429.9136 -161.79 L
428.8514 -161.79 427.99 -160.9286 427.99 -159.8664 c
427.99 -158.8043 428.8514 -157.9429 429.9136 -157.9429 C
459.5372 -157.9429 L
461.9281 -141.9525 L
219.6603 -141.9525 L
212.9091 -187.2061 L
271.2049 -187.2061 L
272.267 -187.2061 273.1284 -188.0675 273.1284 -189.1297 c
273.1284 -190.1919 272.267 -191.0533 271.2049 -191.0533 C
212.3351 -191.0533 L
207.1824 -225.591 L
230.5644 -225.591 L
231.6266 -225.591 232.488 -226.4525 232.488 -227.5146 c
232.488 -228.5768 231.6266 -229.4382 230.5644 -229.4382 C
206.6085 -229.4382 L
197.3316 -291.6211 L
258.1228 -291.6211 L
258.7964 -291.6211 259.4622 -291.6808 260.1229 -291.7682 C
374.6073 -291.7682 L
f
268.4343 -295.6154 m
268.8129 -295.9598 269.1781 -296.3212 269.5231 -296.7054 C
270.7284 -298.0472 L
275.0759 -302.6345 281.2926 -305.3089 287.7154 -305.3089 C
346.0769 -305.3089 L
351.4044 -305.3089 356.6272 -303.4721 360.7818 -300.1371 C
366.2671 -295.6154 L
268.4343 -295.6154 L
f
443.4393 -291.6211 m
464.2851 -291.6211 L
470.2337 -251.8467 L
449.3863 -251.8467 L
443.4393 -291.6211 L
f
182.4415 -225.591 m
203.2929 -225.591 L
216.3446 -138.1053 L
466.3928 -138.1053 L
463.4267 -157.9429 L
484.2781 -157.9429 L
487.7477 -134.7439 L
488.4633 -129.9564 487.2938 -125.5043 484.4532 -122.2071 c
481.6675 -118.9742 477.552 -117.1931 472.8646 -117.1931 C
217.2663 -117.1931 L
206.9784 -117.1931 197.3585 -125.5765 195.8219 -135.8803 C
182.4415 -225.591 L
f
172.5931 -291.6211 m
193.4422 -291.6211 L
202.719 -229.4382 L
181.8677 -229.4382 L
172.5931 -291.6211 L
f
500.2023 -299.3141 m
376.6138 -299.3141 L
374.8472 -299.3141 373.1237 -299.9337 371.7601 -301.0575 C
365.6368 -306.1053 L
360.0821 -310.5641 353.1491 -313.0019 346.0769 -313.0019 C
287.7154 -313.0019 L
279.1894 -313.0019 270.9365 -309.4522 265.0736 -303.2627 C
263.7994 -301.846 L
262.3542 -300.2372 260.2849 -299.3141 258.1228 -299.3141 C
134.2201 -299.3141 L
134.0631 -304.2904 135.7163 -308.6379 139.1374 -312.2438 c
144.4033 -317.7933 153.4812 -321.107 163.4211 -321.107 C
463.5058 -321.107 L
478.2146 -321.107 495.6475 -313.4829 500.2023 -299.3141 C
f
U
258.4693 -225.591 m
245.91 -225.591 L
244.8478 -225.591 243.9864 -226.4525 243.9864 -227.5146 c
243.9864 -228.5768 244.8478 -229.4382 245.91 -229.4382 C
258.4693 -229.4382 L
259.5315 -229.4382 260.3929 -228.5768 260.3929 -227.5146 c
260.3929 -226.4525 259.5315 -225.591 258.4693 -225.591 C
f
549.0043 -113.3121 m
561.5629 -113.3121 L
562.6251 -113.3121 563.4865 -112.4507 563.4865 -111.3885 c
563.4865 -110.3263 562.6251 -109.4649 561.5629 -109.4649 C
549.0043 -109.4649 L
547.9421 -109.4649 547.0807 -110.3263 547.0807 -111.3885 c
547.0807 -112.4507 547.9421 -113.3121 549.0043 -113.3121 C
f
528.8361 -159.8664 m
528.8361 -160.9286 529.6975 -161.79 530.7597 -161.79 C
543.3183 -161.79 L
544.3805 -161.79 545.2419 -160.9286 545.2419 -159.8664 c
545.2419 -158.8043 544.3805 -157.9429 543.3183 -157.9429 C
530.7597 -157.9429 L
529.6975 -157.9429 528.8361 -158.8043 528.8361 -159.8664 c
f
584.1112 -202.4272 m
571.5519 -202.4272 L
570.4897 -202.4272 569.6283 -203.2886 569.6283 -204.3508 c
569.6283 -205.4129 570.4897 -206.2744 571.5519 -206.2744 C
584.1112 -206.2744 L
585.1734 -206.2744 586.0348 -205.4129 586.0348 -204.3508 c
586.0348 -203.2886 585.1734 -202.4272 584.1112 -202.4272 C
f
561.8803 -291.7682 m
549.3216 -291.7682 L
548.2595 -291.7682 547.3981 -292.6296 547.3981 -293.6918 c
547.3981 -294.754 548.2595 -295.6154 549.3216 -295.6154 C
561.8803 -295.6154 L
562.9425 -295.6154 563.8039 -294.754 563.8039 -293.6918 c
563.8039 -292.6296 562.9425 -291.7682 561.8803 -291.7682 C
f
298.687 -187.2061 m
286.1284 -187.2061 L
285.0662 -187.2061 284.2048 -188.0675 284.2048 -189.1297 c
284.2048 -190.1919 285.0662 -191.0533 286.1284 -191.0533 C
298.687 -191.0533 L
299.7492 -191.0533 300.6106 -190.1919 300.6106 -189.1297 c
300.6106 -188.0675 299.7492 -187.2061 298.687 -187.2061 C
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
